<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAgAAAAIACAYAAAD0eNT6AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EwAACxMBAJqcGAAACBBJREFUeF7t3UmsXmMcx/HbNIZSIaaYIiEUYdUFqY2tiCFiDBaGkFjRmBZsaBPU
        wjwsRCKUmGKFENJI2hALiYSEmoIuVKmKUlXT74kmV3L/L73Ve/uecz6f5Jt0eXM3v9v3Ped5JgAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAgO13YDo1XZceSS+nd9Pn6bv0Q9qQvkkfp1XpqbQknZ+OTgDAmNsnXZQeS5+lP3dAa9Oz6dJ0
        QAIAxsC81Eb/lfRrqkZ8R7UlvZYuTrsnAGCWHZruTN+maqxnuvYVwu2p/RwAwAw7OD2UfknVMM927ed4
        MPlDAABmwG7plrQxVUO8s/sp3Zb2SADADnBy+jBVwztutTcMTksAwHaam5am31I1tuNcexNhrwQATEN7
        5e71VI1rV2qvIi5MAMA2ODatTtWodq2f0yUJAPgX7X/M7WS+aky7XPsqAwAoLEjrUzWgfej+BAD8w/z0
        fqqGs0/dkQCArZ5J1WD2sasTAAzeNakayr7W7hQ4JQHAYJ2QNqVqKPvc16kdawwAg9MO+nknVQM5hF5N
        cxIADMq1qRrGIeV5AAAG5aD0Q6pGcUi134GbBAEYjEdTNYhD7MkEAL13XGpPwldjOMT+SCcmAOi15aka
        wiHXHggEgN46KnXxet/Z6KQEAL10b6rGTxMTzycA6J09kyf/R9eeizgkAUCvXJ6q4dNkNycA6JUVqRo9
        TfZBAoDeaAf/ePhv22r3IwBAL1yRqrHT1G5KANALz6Vq7DS1NxIAdF678W5tqsZOU9uYdkkA0GkLUjV0
        Gt3CBACddkGqRk6juywBQKctTdXIaXTLEgB02tOpGjmNzrHAAHTeqlSNnEb3dgKATvs4VSOn0X2SAKDT
        vknVyGl07XcGAJ3mBsDp135nANBp/gCYfhsSAHTaulSNnEbXTk4EgE77NFUjp9F9lACg095J1chpdCsT
        AHTai6kaOY1ueQKATrs7VSOn0d2aAKDTrkrVyGl05yQA6LRFqRo5je6IBACdtnvanKqh09TWJADohbdS
        NXaa2hMJAHrhtlSNnaZ2YQKAXvAcwLa1Ke2dAKAX5qT23XY1eprshQQAvXJXqkZPk52RAKBXjk/V6Onv
        vkhzEwD0zopUjZ8mJhYnAOils1I1fkOvXZk8PwFAL7WHAd9L1QgOuesTAPTamakawaH2eZqXAKD3PAsw
        2bkJAAbhhPRrqgZxSL2UAGBQlqZqFIfS9+mwBACDskt6N1XjOITOTwAwSAvShlQNZJ+7PwHAoJ2dfk/V
        UPaxN1P79AMABu/GVI1l3/ow7ZcAgK2WpWo0+9JX6fAEAPxDOyXwvlSNZ9drF/0clQCAEZakakS7WvvY
        /8gEAPyHy1MfDgpqD/z5zh8ApmFRah+dV8PahR5OuyYAYJr2T8+namDHtfXpvAQA/E8Xp69TNbjj1MvJ
        8b4AsAPtm+5Jm1M1vjuzL5Nb/QBgBrXjgx9PW1I1xrNZ+7j/huQ+fwCYJe29+gfSj6ka55msPZy4OM1P
        AMBOsFdqrw22V+5m8k6BTemFdHqamwCAMXFIujK1oV6XqiGfTmvSE+nCtHcCAMZcO1r4mHRBaqcLPpVW
        pdVpbWrXELfavz9KK9PydGs6Jzm9DwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtt/ExF/Kv33jEQ6xZAAAAABJRU5ErkJggg==
</value>
  </data>
</root>